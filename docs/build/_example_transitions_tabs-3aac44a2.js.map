{"version":3,"file":"_example_transitions_tabs-3aac44a2.js","sources":["../../node_modules/@sveltech/routify/runtime/decorators/BaseTransition.svelte","../../node_modules/@sveltech/routify/runtime/decorators/TabsTransition.svelte","../../src/pages/example/transitions/tabs/_components/BottomNav.svelte","../../src/pages/example/transitions/tabs/_reset.svelte","../../src/pages/example/transitions/tabs/index.svelte","../../src/pages/example/transitions/tabs/feed/[id]/index.svelte","../../src/pages/example/transitions/tabs/feed/index.svelte"],"sourcesContent":["<script>\n  import { getConcestor } from '../helpers'\n  import { fade } from 'svelte/transition'\n  import { route } from '../'\n  export let configs = []\n  export let config = false\n\n  const defaultConfig = {\n    transition: fade,\n    inParams: {},\n    outParams: {},\n  }\n\n  $: oldRoute = $route.last || $route\n  $: [concestor, ancestor, oldAncestor] = getConcestor($route.api, oldRoute.api)\n  $: toAncestor = isAncestor(oldRoute, $route)\n  $: toDescendant = isAncestor($route, oldRoute)\n  $: toHigherIndex = ancestor && ancestor.meta.index > oldAncestor.meta.index\n  $: toLowerIndex = ancestor && ancestor.meta.index < oldAncestor.meta.index\n\n\n  $: meta = {\n    toAncestor,\n    toDescendant,\n    toHigherIndex,\n    toLowerIndex,\n    routes: [$route, oldRoute],\n    pages: [$route.api, oldRoute.api],\n    ancestors: [ancestor, oldAncestor],\n  }\n\n  $: _config = configs.find(({ condition }) => condition(meta)) || config || defaultConfig\n  $: normalizedConfig = { ...defaultConfig, ..._config }\n  $: ({ transition, inParams, outParams } = normalizedConfig)\n\n  function isAncestor(descendant, ancestor) {\n    if(descendant.parent === ancestor.parent) return false\n    const { shortPath } = descendant.parent\n    const { shortPath: shortPath2 } = ancestor.parent\n    \n    return ancestor.isIndex && shortPath !== shortPath2 && shortPath.startsWith(shortPath2)\n  }\n\n  function setAbsolute({ target }) {\n    const rect = target.getBoundingClientRect()\n    target.style.width = `${rect.width}px`\n    target.style.height = `${rect.height}px`\n    target.style.top = `${rect.top}px`\n    target.style.left = `${rect.left}px`\n    \n    // target.style.transform = 'translate(-50%, -50%)'\n    target.style.position = 'fixed'\n  }\n  function removeAbsolute({ target }) {\n    target.style.position = ''\n    target.style.width = ''\n    target.style.height = ''\n    target.style.transform = ''\n  }\n</script>\n\n<style>\n  .transition {\n    height: 100%;\n    width: 100%;\n  }\n</style>\n\n<div\n  class=\"transition\"\n  in:transition|local={inParams}\n  out:transition|local={outParams}\n  on:introstart={removeAbsolute}\n  on:outrostart={setAbsolute}\n  >\n  <slot />\n</div>\n\n","<script>\n  import { scale, fly } from 'svelte/transition'\n  import BaseTransition from './BaseTransition.svelte'\n\n  export let scoped\n  const { width } = scoped\n\n  const configs = [\n    {\n      // New and old route are identical, do nothing\n      condition: ({ routes }) => routes[0] === routes[1],\n      transition: () => {},\n    },\n    {\n      condition: c => c.toAncestor,\n      transition: scale,\n      inParams: { start: 1.2 },\n      outParams: { start: 0.8 },\n    },\n    {\n      condition: c => c.toDescendant,\n      transition: scale,\n      inParams: { start: 0.8 },\n      outParams: { start: 1.2 },\n    },\n    {\n      condition: c => c.toHigherIndex,\n      transition: fly,\n      inParams: { x: $width, duration: 500 },\n      outParams: { x: -$width, duration: 500 },\n    },\n    {\n      condition: c => c.toLowerIndex,\n      transition: fly,\n      inParams: { x: -$width, duration: 500 },\n      outParams: { x: $width, duration: 500 },\n    },\n    {\n      // No matching config. We don't want a transition\n      condition: () => true,\n      transition: () => {},\n    },\n  ]\n</script>\n\n<BaseTransition {configs}>\n  <slot />\n</BaseTransition>\n","<script>\n  import { url, isActive } from \"@sveltech/routify\";\n  export let urls, height;\n  let linkElems = [];\n  let overlay;\n  let clientWidth\n  $: urlsWithElem = linkElems.map((elem, i) => ({ ...urls[i], elem }));\n  $: activeUrl = urlsWithElem.find(({active}) => active)\n  $: if (overlay && clientWidth && activeUrl) copyDimensions(activeUrl.elem, overlay);\n  $: color = activeUrl && activeUrl.color\n\n  function copyDimensions(source, target) {\n    target.style.left = source.offsetLeft + \"px\";\n    target.style.top = source.offsetTop + \"px\";\n    target.style.width = source.clientWidth + \"px\";\n    target.style.height = source.clientHeight + \"px\";\n  }\n\n  const saveElement = el => (linkElems = [...linkElems, el]);\n</script>\n\n<style>\n  nav {\n    width: 100%;\n    background: white;\n    display: flex;\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    box-shadow: 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n    justify-content: space-evenly;\n  }\n  a {\n    padding: 0 16px;\n    line-height: 100%;\n    font-weight: 500;\n    color: #aaa;\n    text-transform: uppercase;\n    text-decoration: none;\n    width: 100%;\n    text-align: center;\n    position: relative;\n    z-index: 10;\n    transition: all 0.8s;\n    /* transition-delay: 0.05s */\n  }\n  a.active {\n    color: #fff;\n  }\n  .overlay {\n    position: absolute;\n    /* background: #555; */\n    transition: 0.3s all;\n    background: linear-gradient(\n          rgba(0, 0, 0, 0.15), \n          rgba(0, 0, 0, 0.15)\n        )\n  }\n</style>\n\n<nav bind:clientWidth>\n  {#each urls as { name, path, active, href }, i}\n    <a\n      style=\"line-height: {height}\"\n      {href}\n      class:active\n      use:saveElement>\n      {name}\n    </a>\n  {/each}\n  <div class=\"overlay\" bind:this={overlay} style=\"background-color: {color}\" />\n</nav>\n","<script>\n  import { TabsTransition } from \"@sveltech/routify/decorators\";\n  import { writable } from \"svelte/store\";\n  import BottomNav from \"./_components/BottomNav.svelte\";\n  import { url, isActive } from \"@sveltech/routify\";\n\n  const width = writable();\n  const color = writable();\n  const _urls = [\n    [\"./home\", \"Home\", \"#7fc5bb\"],\n    [\"./feed\", \"Feed\", \"#0bf5cc\"],\n    [\"./updates\", \"Updates\", \"#88f0d0\"],\n    [\"./settings\", \"Settings\", \"#a1fac3\"]\n  ];\n  $: urls = _urls.map(([path, name, color]) => ({\n    name,\n    href: $url(path),\n    color,\n    active: !!$isActive(path)\n  }));\n  \n  $: urlOrder = urls.map(({href}) => href);\n</script>\n\n<style>\n  :global(body) {\n    padding: 0;\n  }\n  * :global(.inset) {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n  }\n  main.inset {\n    bottom: 64px;\n    overflow: hidden;\n  }\n\n  * :global(*) {\n    text-align: center;\n  }\n  a {\n    position: fixed;\n    top: 0;\n    left: 0;\n    padding: 8px 16px;\n    background: #555;\n    color: white;\n  }\n</style>\n\n<div style=\"height: 100%\">\n\n  <main class=\"inset\" bind:offsetWidth={$width}>\n    <slot decorator={TabsTransition} scoped={{ width, urls: urlOrder }} />\n  </main>\n  <BottomNav {urls} height=\"64px\" />\n</div>\n\n<a href={$url('../../')}>Back to examples</a>\n\n<!-- routify:options bundle=true -->","<script>\n  import { redirect } from '@sveltech/routify'\n  $redirect('../home')\n</script>","<script>\n  export let id;\n  import { url } from \"@sveltech/routify\";\n</script>\n\n<style>\n  a {\n    font-size: 1.5em;\n    padding: 12px 24px;\n  }\n</style>\n\n<div class=\"card\" style=\"width: 512px;\">\n  <h1>{id}</h1>\n</div>\n\n<br />\n\n<a href={$url('../../../home')}>Go home</a>\n<a href={$url('../../')}>Go back</a>\n","<script>\n  import { url } from \"@sveltech/routify\";\n</script>\n\n<div style=\"padding-top: 20px\">\n  <h1>Feed</h1>\n</div>\n\n{#each new Array(10) as item, id}\n  <a class=\"card\" href={$url('../:id', { id })}>\n    <h3 class=\"item\">{id}</h3>\n  </a>\n{/each}\n"],"names":["removeAbsolute","setAbsolute","ctx","target","rect","getBoundingClientRect","style","width","height","top","left","position","transform","configs","config","defaultConfig","transition","fade","inParams","outParams","isAncestor","descendant","ancestor","parent","shortPath","shortPath2","isIndex","startsWith","oldRoute","$route","last","concestor","oldAncestor","getConcestor","api","toAncestor","toDescendant","toHigherIndex","meta","index","toLowerIndex","routes","pages","ancestors","_config","find","condition","normalizedConfig","scoped","c","scale","start","fly","x","$width","duration","length","overlay","clientWidth","urls","linkElems","source","urlsWithElem","map","elem","i","activeUrl","active","offsetLeft","offsetTop","clientHeight","color","el","TabsTransition","writable","_urls","path","name","href","$url","$isActive","urlOrder","$redirect","id","Array"],"mappings":"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"}